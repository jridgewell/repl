{"version":3,"sources":["App.module.css","Header.module.css","CodeMirror.js","CodeMirrorPanel.js","lib/helpers.js","lib/terser-options.js","Repl.js","Header.js","App.js","serviceWorker.js","index.js","CodeMirrorPanel.module.css","Repl.module.css"],"names":["module","exports","require","DEFAULT_CODE_MIRROR_OPTIONS","autoCloseBrackets","keyMap","lineNumbers","matchBrackets","mode","showCursorWhenSelecting","styleActiveLine","tabWidth","CodeMirrorReact","state","isFocused","_codeMirror","_textAreaRef","_onChange","doc","change","origin","props","onChange","getValue","_setTextAreaRef","ref","this","CodeMirror","fromTextArea","options","setOption","theme","on","setValue","value","toTextArea","nextProps","preserveScrollPosition","prevScrollPosition","getScrollInfo","scrollTo","left","top","optionName","hasOwnProperty","_updateOption","focus","autoComplete","autoFocus","defaultValue","placeholder","newValue","getOption","Component","defaultProps","CodeMirrorPanel","className","code","fileSize","info","errorMessage","containerClass","cx","styles","container","infoClass","sharedBox","errorClass","error","codeMirror","readOnly","getCodeSizeInBytes","Blob","type","size","base64UrlDecodeChars","base64UrlEncodeChars","saveState","base64","input","btoa","replace","c","base64UrlEncode","JSON","stringify","window","history","replaceState","loadState","location","hash","slice","parse","atob","base64UrlDecode","evalOptions","opts","defaultState","optionsCode","minified","terserOptions","rawSize","minifiedSize","Repl","_minifyId","_options","lineWrapping","_updateCode","setState","_minifyToState","_updateTerserOptions","parsedOptions","optionsErrorMessage","e","message","debounce","_minify","setStateCallback","a","terserOpts","cloneDeep","minifyId","terser","minify","result","wrapperPanels","panels","verticalSplit","codeMirrorPanelOptions","codeMirrorPanelInput","codeMirrorPanel","Header","href","src","alt","App","Terser","Error","body","React","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.79c5c13a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"App_message__2vrzR\",\"error\":\"App_error__1umzI\",\"container\":\"App_container__1MQN3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__7YgNF\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport CodeMirror from 'codemirror';\n\nrequire('codemirror/lib/codemirror.css');\nrequire('./paraiso-dark.css');\nrequire('./paraiso-light.css');\nrequire('codemirror/mode/xml/xml');\nrequire('codemirror/mode/javascript/javascript');\nrequire('codemirror/keymap/sublime');\nrequire('codemirror/addon/display/placeholder');\n\nconst DEFAULT_CODE_MIRROR_OPTIONS = {\n  autoCloseBrackets: true,\n  keyMap: 'sublime',\n  lineNumbers: true,\n  matchBrackets: true,\n  mode: 'javascript',\n  showCursorWhenSelecting: true,\n  styleActiveLine: true,\n  tabWidth: 2\n};\n\nclass CodeMirrorReact extends Component {\n  static propTypes = {\n    autoFocus: PropTypes.bool,\n    preserveScrollPosition: PropTypes.bool,\n    options: PropTypes.object,\n    placeholder: PropTypes.string,\n    value: PropTypes.string,\n    theme: PropTypes.string\n  };\n\n  static defaultProps = {\n    autoFocus: false,\n    preserveScrollPosition: false,\n    onChange: null,\n    options: {},\n    placeholder: null,\n    value: null,\n    theme: 'default'\n  };\n\n  state = {\n    isFocused: false\n  };\n\n  _codeMirror = null;\n  _textAreaRef = null;\n\n  componentDidMount() {\n    this._codeMirror = CodeMirror.fromTextArea(this._textAreaRef, {\n      ...DEFAULT_CODE_MIRROR_OPTIONS,\n      ...this.props.options\n    });\n\n    this._codeMirror.setOption('theme', this.props.theme)\n    this._codeMirror.on('change', this._onChange);\n    this._codeMirror.setValue(this.props.value || '');\n  }\n\n  // TODO: refactor this with the new lyfecycle methods\n  UNSAFE_componentWillMount() {\n    if (this._codeMirror) {\n      this._codeMirror.toTextArea();\n    }\n  }\n\n  // TODO: refactor this with the new lyfecycle methods\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.value &&\n      nextProps.value !== this.props.value &&\n      this._codeMirror.getValue() !== nextProps.value\n    ) {\n      if (nextProps.preserveScrollPosition) {\n        const prevScrollPosition = this._codeMirror.getScrollInfo();\n\n        this._codeMirror.setValue(nextProps.value);\n        this._codeMirror.scrollTo(\n          prevScrollPosition.left,\n          prevScrollPosition.top\n        );\n      } else {\n        this._codeMirror.setValue(nextProps.value);\n      }\n    } else if (!nextProps.value) {\n      this._codeMirror.setValue('');\n    }\n\n    for (const optionName in nextProps.options) {\n      if (nextProps.options.hasOwnProperty(optionName)) {\n        this._updateOption(optionName, nextProps.options[optionName]);\n      }\n    }\n  }\n\n  focus() {\n    this._codeMirror && this._codeMirror.focus();\n  }\n\n  render() {\n    return (\n      <textarea\n        autoComplete=\"off\"\n        autoFocus={this.props.autoFocus}\n        defaultValue={this.props.value}\n        ref={this._setTextAreaRef}\n        placeholder={this.props.placeholder}\n      />\n    );\n  }\n\n  _updateOption(optionName, newValue) {\n    const oldValue = this._codeMirror.getOption(optionName);\n\n    if (oldValue !== newValue) {\n      this._codeMirror.setOption(optionName, newValue);\n    }\n  }\n\n  _onChange = (doc, change) => {\n    if (change.origin !== 'setValue') {\n      this.props.onChange(doc.getValue());\n    }\n  };\n\n  _setTextAreaRef = (ref = null) => {\n    this._textAreaRef = ref;\n  };\n}\n\nexport default CodeMirrorReact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport CodeMirror from './CodeMirror';\n\nimport styles from './CodeMirrorPanel.module.css';\n\nconst CodeMirrorPanel = props => {\n  const {\n    className,\n    onChange,\n    options,\n    placeholder,\n    code,\n    fileSize,\n    info,\n    errorMessage,\n    theme\n  } = props;\n\n  const containerClass = cx(styles.container, className);\n  const infoClass = cx(styles.info, styles.sharedBox);\n  const errorClass = cx(styles.error, styles.sharedBox);\n\n  return (\n    <div className={containerClass}>\n      <div className={styles.codeMirror}>\n        <CodeMirror\n          onChange={onChange}\n          options={{\n            ...options,\n            readOnly: onChange == null\n          }}\n          placeholder={placeholder}\n          preserveScrollPosition={onChange == null}\n          value={code}\n          theme={theme}\n        />\n        {options.fileSize && <div className={styles.fileSize}>{fileSize} bytes</div>}\n      </div>\n      {info && <pre className={infoClass}>{info}</pre>}\n      {errorMessage && <pre className={errorClass}>{errorMessage}</pre>}\n    </div>\n  );\n};\n\nCodeMirrorPanel.propTypes = {\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  options: PropTypes.object,\n  placeholder: PropTypes.string,\n  code: PropTypes.string,\n  fileSize: PropTypes.number\n};\n\nCodeMirrorPanel.defaultProps = {\n  className: null,\n  onChange: null,\n  options: {},\n  placeholder: null,\n  code: null,\n  fileSize: null\n};\n\nexport default CodeMirrorPanel;\n","export const getCodeSizeInBytes = code => {\n  return new Blob([code], { type: 'text/plain' }).size;\n};\n\nconst base64UrlDecodeChars = {'-': '+', '_': '/', '.': '='};\nconst base64UrlDecode = input => {\n  try {\n    return atob(input.replace(/[-_.]/g, c => base64UrlDecodeChars[c]));\n  } catch {\n    return null;\n  }\n}\n\nconst base64UrlEncodeChars = {'+': '-', '/': '_', '=': '.'};\nconst base64UrlEncode = input => {\n  try {\n    return btoa(input).replace(/[+/=]/g, c => base64UrlEncodeChars[c]);\n  } catch {\n    return null;\n  }\n}\n\nexport const saveState = state => {\n  const base64 = base64UrlEncode(JSON.stringify(state));\n  window.history.replaceState(state, '', `#${base64}`);\n};\n\nexport const loadState = () => {\n  try {\n    const base64 = window.location.hash.slice(1);\n    return JSON.parse(base64UrlDecode(base64));\n  } catch {}\n  return null;\n}\n","// All terser options available for reference\n\n// const options = `// edit terser options\n// {\n//   compress: {\n//     arguments: false,\n//     arrows: true,\n//     booleans: true,\n//     booleans_as_integers: false,\n//     collapse_vars: true,\n//     comparisons: true,\n//     computed_props: true,\n//     conditionals: true,\n//     dead_code: true,\n//     defaults: true,\n//     directives: true,\n//     drop_console: false,\n//     drop_debugger: true,\n//     ecma: 5,\n//     evaluate: true,\n//     expression: false,\n//     global_defs: false,\n//     hoist_funs: false,\n//     hoist_props: true,\n//     hoist_vars: false,\n//     ie8: false,\n//     if_return: true,\n//     inline: 3,\n//     join_vars: true,\n//     keep_classnames: false,\n//     keep_fargs: true,\n//     keep_fnames: false,\n//     keep_infinity: false,\n//     loops: true,\n//     module: false,\n//     negate_iife: true,\n//     passes: 1,\n//     properties: true,\n//     pure_getters: 'strict',\n//     pure_funcs: null,\n//     reduce_funcs: true,\n//     reduce_vars: true,\n//     sequences: true,\n//     side_effects: true,\n//     switches: true,\n//     top_retain: null,\n//     toplevel: false,\n//     typeofs: true,\n//     unsafe: false,\n//     unsafe_arrows: false,\n//     unsafe_comps: false,\n//     unsafe_Function: false,\n//     unsafe_math: false,\n//     unsafe_methods: false,\n//     unsafe_proto: false,\n//     unsafe_regexp: false,\n//     unsafe_undefined: false,\n//     unused: true,\n//     warnings: false\n//   },\n//   enclose: false,\n//   ie8: false,\n//   keep_classnames: false,\n//   keep_fnames: false,\n//   mangle: {\n//     cache: null,\n//     eval: false,\n//     ie8: false,\n//     keep_classnames: false,\n//     keep_fnames: false,\n//     module: false,\n//     properties: false,\n//     reserved: ['arguments'],\n//     safari10: false,\n//     toplevel: false\n//   },\n//   module: false,\n//   nameCache: null,\n//   output: {\n//     ascii_only: false,\n//     beautify: false,\n//     braces: false,\n//     comments: false,\n//     ecma: 5,\n//     ie8: false,\n//     indent_level: 4,\n//     indent_start: 0,\n//     inline_script: true,\n//     keep_quoted_props: false,\n//     max_line_len: false,\n//     preamble: null,\n//     quote_keys: false,\n//     quote_style: 0,\n//     safari10: false,\n//     semicolons: true,\n//     shebang: true,\n//     shorthand: false,\n//     source_map: null,\n//     webkit: false,\n//     width: 80,\n//     wrap_iife: false\n//   },\n//   parse: {\n//     toplevel: {},\n//     filename: '0',\n//     bare_returns: false,\n//     ecma: 8,\n//     expression: false,\n//     html5_comments: true,\n//     module: false,\n//     shebang: true,\n//     strict: false\n//   },\n//   rename: {\n//     cache: null,\n//     eval: false,\n//     ie8: false,\n//     keep_classnames: false,\n//     keep_fnames: false,\n//     module: false,\n//     properties: false,\n//     reserved: ['arguments'],\n//     safari10: false,\n//     toplevel: false\n//   },\n//   safari10: false,\n//   sourceMap: false,\n//   timings: false,\n//   toplevel: false,\n//   warnings: false,\n//   wrap: false\n// }`;\n\nconst options = `// edit terser options\n{\n  module: true,\n  compress: {},\n  mangle: {},\n  output: {},\n  parse: {},\n  rename: {},\n}`;\n\nexport const evalOptions = (opts) => {\n  opts = opts || options;\n  // Strip line comments\n  opts = opts.replace(/\\/\\/.*/g, '');\n  // Trim trailing commas\n  opts = opts.replace(/,\\s*([\\]}])/g, '$1');\n  // Quote property names\n  opts = opts.replace(/^\\s*(\\w+):/gm, '\"$1\":');\n  return JSON.parse(opts);\n}\n\nexport default options;\n","import React, { Component } from 'react';\nimport { debounce, cloneDeep } from 'lodash-es';\n\nimport CodeMirrorPanel from './CodeMirrorPanel';\nimport { getCodeSizeInBytes, loadState, saveState } from './lib/helpers';\nimport terserOptions, { evalOptions } from './lib/terser-options';\n\nimport styles from './Repl.module.css';\n\nconst DEBOUNCE_DELAY = 500;\n\nconst defaultState = {\n  optionsCode: terserOptions,\n  code: '',\n  minified: '',\n  terserOptions: evalOptions(),\n  rawSize: 0,\n  minifiedSize: 0,\n};\n\nclass Repl extends Component {\n  state = loadState() || defaultState;\n\n  _minifyId = 0;\n  _options = {\n    lineWrapping: true,\n    fileSize: true\n  };\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <div className={styles.wrapperPanels}>\n          <div className={styles.panels}>\n            <div className={styles.verticalSplit}>\n              <CodeMirrorPanel\n                className={styles.codeMirrorPanelOptions}\n                code={this.state.optionsCode}\n                onChange={this._updateTerserOptions}\n                options={{ lineWrapping: true }}\n                theme=\"paraiso-light\"\n                errorMessage={this.state.optionsErrorMessage}\n                placeholder=\"// Edit terser config here\"\n              />\n              <CodeMirrorPanel\n                className={styles.codeMirrorPanelInput}\n                code={this.state.code}\n                onChange={this._updateCode}\n                options={this._options}\n                fileSize={this.state.rawSize}\n                theme=\"paraiso-light\"\n                errorMessage={this.state.errorMessage}\n                placeholder=\"// Write or paste code here\"\n              />\n            </div>\n            <CodeMirrorPanel\n              className={styles.codeMirrorPanel}\n              code={this.state.minified}\n              options={this._options}\n              fileSize={this.state.minifiedSize}\n              theme=\"paraiso-dark\"\n              placeholder=\"// Terser output will be shown here\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  _updateCode = code => {\n    this.setState({\n      code,\n      rawSize: getCodeSizeInBytes(code)\n    });\n    this._minifyToState(code);\n  };\n\n  _updateTerserOptions = options => {\n    try {\n      const parsedOptions = evalOptions(options);\n\n      this.setState({\n        terserOptions: parsedOptions,\n        optionsErrorMessage: null\n      });\n    } catch (e) {\n      this.setState({ optionsErrorMessage: e.message });\n    }\n\n    this._minifyToState(this.state.code);\n  };\n\n  _minifyToState = debounce(code => this._minify(code), DEBOUNCE_DELAY);\n\n  _minify = async (code, setStateCallback) => {\n    // we need to clone this because terser mutates the options object :(\n    const terserOpts = cloneDeep(this.state.terserOptions);\n\n    const minifyId = ++this._minifyId;\n    // TODO: put this in a worker to avoid blocking the UI on heavy content\n    try {\n      const result = await this.props.terser.minify(code, terserOpts);\n      if (this._minifyId !== minifyId) return;\n\n      if (result.error) {\n        this.setState({ errorMessage: result.error.message });\n      } else {\n        this.setState({\n          minified: result.code,\n          minifiedSize: getCodeSizeInBytes(result.code),\n          errorMessage: null\n        });\n        saveState(this.state);\n      }\n    } catch (e) {\n      this.setState({ errorMessage: e.message });\n    }\n  };\n}\n\nexport default Repl;\n","import React from 'react';\n\nimport styles from './Header.module.css';\n\nconst Header = () => {\n  return (\n    <div className={styles.container}>\n      <header>\n        <a href=\"https://terser.org\">\n          <img\n            src=\"https://terser.org/img/terser-square-logo.png\"\n            alt=\"Terser logo\"\n          />\n          <h2>terser</h2>\n        </a>\n      </header>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react'\n\nimport Repl from './Repl'\nimport Header from './Header';\n\nimport styles from './App.module.css'\n\nexport default class App extends React.Component {\n  state = {\n    error: null,\n  }\n  componentDidMount() {\n    if (!window.Terser) {\n      this.setState({\n        error: new Error('Could not load Terser from jsdelivr')\n      })\n    }\n  }\n  render() {\n    const { error } = this.state\n\n    const body = (() => {\n      if (error) {\n        return (\n          <div className={styles.message + ' ' + styles.error}>\n            {error?.message || 'An error has occurred'}\n          </div>\n        )\n      } else {\n        return <Repl terser={window.Terser} />\n      }\n    })()\n\n    return (\n      <div className={styles.container}>\n        <Header />\n        {body}\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CodeMirrorPanel_container__3QpkM\",\"sharedBox\":\"CodeMirrorPanel_sharedBox__PB0Sj\",\"codeMirror\":\"CodeMirrorPanel_codeMirror__vmJpw\",\"info\":\"CodeMirrorPanel_info__5WIzp\",\"error\":\"CodeMirrorPanel_error__2t1ti\",\"fileSize\":\"CodeMirrorPanel_fileSize__h3Hkc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Repl_container__SliIm\",\"wrapperPanels\":\"Repl_wrapperPanels__M5Uvu\",\"panels\":\"Repl_panels__ZhGDg\",\"verticalSplit\":\"Repl_verticalSplit__2Vo9P\",\"codeMirrorPanel\":\"Repl_codeMirrorPanel__3kO2i\",\"codeMirrorPanelOptions\":\"Repl_codeMirrorPanelOptions__haEox\",\"codeMirrorPanelInput\":\"Repl_codeMirrorPanelInput__2EBx4\"};"],"sourceRoot":""}